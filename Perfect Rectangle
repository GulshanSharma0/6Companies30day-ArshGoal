Given an array rectangles where rectangles[i] = [xi, yi, ai, bi] represents an axis-aligned rectangle. 
The bottom-left point of the rectangle is (xi, yi) and the top-right point of it is (ai, bi).
Return true if all the rectangles together form an exact cover of a rectangular region.
Input: rectangles = [[1,1,3,3],[3,1,4,2],[3,2,4,4],[1,3,2,4],[2,3,3,4]]
Output: true
Explanation: All 5 rectangles together form an exact cover of a rectangular region.
Example 2:
Input: rectangles = [[1,1,2,3],[1,3,2,4],[3,1,4,2],[3,2,4,4]]
Output: false
Explanation: Because there is a gap between the two rectangular regions.
Example 3:
Input: rectangles = [[1,1,3,3],[3,1,4,2],[1,3,2,4],[2,2,4,4]]
Output: false
Explanation: Because two of the rectangles overlap with each other.

 bool isRectangleCover(vector<vector<int>>& rectangles) {
        int len = rectangles.size();
        if(len==0 || len==1){
            return true;
        }
        map<long long,int>mp;
        const long long n=1000000;
        for(vector<int>& it:rectangles){
            int x=it[0];
            int y=it[1];
            int x1=it[2];
            int y1=it[3];
            mp[x*n+y]++;
            mp[x*n+y1]--;
            mp[x1*n+y]--;
            mp[x1*n+y1]++;
        }
        int angle_count=0;
        for(auto it=mp.begin(); it!=mp.end();it++){
            if(it->second!=0){
                if(abs(it->second)!=1){
                    return false;
                }
                angle_count++;
            }
        }
        return angle_count==4;
        
    }
